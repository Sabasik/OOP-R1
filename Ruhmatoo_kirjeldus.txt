Töö autorid: Elis Käär, Kadi Sammul

Programm on valminud eesmärgiga aidata algklasside õpilastel arvutamist harjutada.
Programmis on võimalik teha liitmis-, lahutamis-, korrutamis- ja jagamistehteid.
Lisaks on võimalik teha kombineeritud tehteid.
Kasutaja saab valida endale tehete tüübi ja raskusastme. Pärast igat õiget vastust tuleb uuesti valida.
Programm genereerib tingimustele vastavad tehted ja küsib kasutajalt vastust. Tehe on ees kuni sisestatakse
õige vastus. Vale vastuse korral informeeritakse sellest kasutajat. Kui sisestatakse mittearvuline väärtus,
siis teavitatakse sellest kasutajat. Programmi saab kinni panna nupust "Lõpeta".

Peaklass
- programmi käivitamine
- suhtlus kasutajaga (graafilise kasutajaliidese kaudu)
- kasutaja soovile vastavate tehete näitamine ja vastuse kontroll

Tehe
- abstraktne klass
- sisaldab viit alamklassi, kõigi eesmärk on sobivate tehete genereerimine
- meetod jooksuta()
	-käivitab vastavalt raskusastmele õige meetodi
-meetod esita(int, int, char)
	-vastavalt tehte liigile tagastab tehte õigel kujul + tagastab vastuse
-abtraktsed meetodid lihtne(), keskmine() ja raske()

Liitmine
- Tehte alamklass
- meetodid lihtne(), keskmine() ja raske()
	-genereerivad sobivas vahemikus arvud ning tagastavad meetodi esita(int, int, char) väärtuse


Lahutamine
- Tehte alamklass
- meetodid lihtne(), keskmine() ja raske()
	-genereerivad sobivas vahemikus arvud ning tagastavad meetodi esita(int, int, char) väärtuse


Korrutamine
- Tehte alamklass
- meetodid lihtne(), keskmine() ja raske()
	-genereerivad sobivas vahemikus arvud ning tagastavad meetodi esita(int, int, char) väärtuse


Jagamine
- Tehte alamklass
- meetodid lihtne(), keskmine() ja raske()
	-genereerivad sobivas vahemikus arvud ning tagastavad meetodi esita(int, int, char) väärtuse
- meetod suvaline(boolean)
	-abimeetod sobivate arvude genereerimseks

Kombineeritud
- Tehte alamklass
- meetodid lihtne(), keskmine() ja raske()
	-genereerivad sobivas vahemikus arvud ning tagastavad vastavalt
		meetodi esitaKombineeritud1(int, int, int, char, char) //lihtne, keskmine
		või esitaKombineeritud2(int, int, int, int, char) //raske
		väärtuse


Projekti tegemise protsess - mõlemad rühmaliikmed panustasid ühiselt
	I etapp
1) idee arendamine
	-esialgse idee lahti mõtestamine
	-projekti struktuuri ja ülesehituse kooskõlastamine
	-detailide täpsustamine
2) programmi kirjutamine
	-esimese klassi valmimine näidisena
	-teiste klasside valmimine
	-ülemklassi tegemine korduste vähendamiseks
	-ülevaatus struktuuri ilustamiseks
3) kirjelduse valmimine ja viimased ilustused
	II etapp
1) idee arendamine
	-esialgne välimus
	-sisalduvad elemendid
2) teostus
	-eelnevate klasside muutmine, et asi ühilduks
	-graafika lisamine

Rühmaliikmete panus
	I etapp
	-Elis
		-> Liitmine, Korrutamine, Kombineeritud, Tehe
		-> orienteeruv ajakulu: 20h
	-Kadi
		-> Lahutamine, Jagamine, Peaklass, kirjeldus
		-> orienteeruv ajakulu: 20h
	II etapp
	-Elis
		-> ideed, graafika, suhtlus failidega
		-> orienteeruv ajakulu: 20h
	-Kadi
		-> ideed, graafika, kirjeldus
		-> orienteeruv ajakulu: 20h

Tegemise mured:
Arvasime mõlemad, et tähtaeg on nädal aega hiljem ning seetõttu ei saanud nii rahulikult asjasse
süveneda kui oleks tahtnud.

Hinnang lõpptulemusele:
I etapp
Tulemus vastab ettekujutusele. Plaanitud asjad said kenasti valmis, kõik töötab nii nagu tahtsime.
II etapp
Kõik vajalikud osad said programmi sisse. Ajapuuduse tõttu ei ole tulemus nii hea ja uhke kui me tahtsime,
aga samas töötab programm nii nagu plaanisime.

Programmi testimine:
Kõikvõimalike sisestuste läbikatsetamine ja tulemuse korrektsuse hindamine.
Kontroll, et programm töötaks ka siis, kui kasutaja otsustab sisestada midagi suvalist.







